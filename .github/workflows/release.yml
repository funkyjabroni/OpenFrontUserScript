name: üè∑Ô∏è Release

on:
  release:
    types:
      - created
      - edited

permissions: {}

jobs:
  build:
    name: üèóÔ∏è Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: üîó Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: build
        env:
          DOCKER_REPO: ${{ vars.DOCKERHUB_REPO }}
          DOCKER_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          RELEASE_BODY: ${{ github.event.release.body }}
          RELEASE_NAME: ${{ github.event.release.name }}
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          cat <<EOF >> $GITHUB_STEP_SUMMARY
          Name: ${RELEASE_NAME}
          Tag: ${RELEASE_TAG_NAME}
          Changelog:
          ${RELEASE_BODY}
          EOF
          ./build.sh prod "${RELEASE_TAG_NAME}" "${RELEASE_BODY}" /tmp/build-metadata.json
          IMAGE_ID=$(jq -r '."containerimage.digest"' /tmp/build-metadata.json)
          echo "${IMAGE_ID}"
          echo "${DOCKER_USERNAME}/${DOCKER_REPO}@${IMAGE_ID}"
          echo "IMAGE_ID=${IMAGE_ID}" >> $GITHUB_OUTPUT
          echo "Image ID: `${IMAGE_ID}`" >> $GITHUB_STEP_SUMMARY
    outputs:
      IMAGE_ID: ${{ steps.build.outputs.IMAGE_ID }}

  deploy-alpha:
    name: üß™ Deploy to alpha
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [build]
    steps:
      - env:
          IMAGE_ID: ${{ needs.build.ouputs.IMAGE_ID }}
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          # TODO: Switch to using IMAGE_ID
          ./deploy.sh staging staging "${RELEASE_TAG_NAME}" alpha

  deploy-beta:
    name: üêû Deploy to beta
    runs-on: ubuntu-latest
    needs: [deploy-alpha]
    timeout-minutes: 30
    environment: prod
    steps:
      - env:
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          ./deploy.sh prod nbg1 "${RELEASE_TAG_NAME}" beta

  deploy-blue:
    name: üîµ Deploy to blue
    runs-on: ubuntu-latest
    needs: [deploy-alpha]
    timeout-minutes: 30
    environment: prod
    steps:
      - env:
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          ./deploy.sh prod nbg1 "${RELEASE_TAG_NAME}" blue

  deploy-green:
    name: üü¢ Deploy to green
    runs-on: ubuntu-latest
    needs: [deploy-alpha]
    timeout-minutes: 30
    environment: prod
    steps:
      - env:
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          ./deploy.sh prod nbg1 "${RELEASE_TAG_NAME}" green
